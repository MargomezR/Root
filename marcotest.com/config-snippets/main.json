{
    "rules": {
        "name": "default",
        "children": [
            "#include:Completely_Static_Content.json",
            "#include:3._IM_dynamic_policy.json",
            "#include:Image_and_Video_Manager_(Images).json",
            "#include:logs_X-Detected-VPN.json",
            "#include:logs_X-Detected-Proxy.json",
            "#include:Redirect_to_HTTPS.json"
        ],
        "behaviors": [
            {
                "name": "origin",
                "options": {
                    "cacheKeyHostname": "REQUEST_HOST_HEADER",
                    "compress": true,
                    "enableTrueClientIp": false,
                    "forwardHostHeader": "CUSTOM",
                    "hostname": "www.gsshappylearning.com",
                    "httpPort": 80,
                    "httpsPort": 443,
                    "originSni": true,
                    "originType": "CUSTOMER",
                    "verificationMode": "CUSTOM",
                    "originCertificate": "",
                    "ports": "",
                    "customForwardHostHeader": "www.gsshappylearning.com",
                    "customValidCnValues": [
                        "{{Origin Hostname}}",
                        "{{Forward Host Header}}"
                    ],
                    "originCertsToHonor": "CUSTOM_CERTIFICATES",
                    "customCertificates": [
                        {
                            "subjectCN": "gsshappylearning.com",
                            "subjectAlternativeNames": [
                                "gsshappylearning.com",
                                "www.gsshappylearning.com"
                            ],
                            "subjectRDNs": {
                                "CN": "gsshappylearning.com"
                            },
                            "issuerRDNs": {
                                "C": "US",
                                "OU": "Server CA 1B",
                                "CN": "Amazon",
                                "O": "Amazon"
                            },
                            "notBefore": 1599004800000,
                            "notAfter": 1633262400000,
                            "sigAlgName": "SHA256withRSA",
                            "publicKey": "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoUrSgP2Vp4rfCuUJbhE4KkwwyKJ1U46bmv98tVnUaiswW1Q09gxRTb8mXjwx2AAzlLjEvwS3LXz3exjQVYUtOQkghsw3K4v/QVj6J/9bilnG/Iw1Rr6z/RQPqiPhxLS0HcGV3NibeN3d+PYkcMDq5S//YWp+i8WNzw0dH0PwgE3svrOob4gdsn4s3eYi9mwaw5jUIVaicd9ZowZgHS6QV3MZgQ2vQppg6giKVj3PGeurA32jX5Z7idvUoETeIQ3/nfDR/nXhsUdRwQl01Cmw9+izuUVnq36Ds9sErN/3rijLgFiWMj+C+64drBU/f5V/3aYEAZnkuYMswJavlGQ7NwIDAQAB",
                            "publicKeyAlgorithm": "RSA",
                            "publicKeyFormat": "X.509",
                            "serialNumber": "9495910095733242438594184095832106743",
                            "version": 3,
                            "sha1Fingerprint": "893ddea371bc1a6dd4db2245e01f904bc419233e",
                            "pemEncodedCert": "-----BEGIN CERTIFICATE-----\nMIIFizCCBHOgAwIBAgIQByTYg76JGmgMC4VL6Jpm9zANBgkqhkiG9w0BAQsFADBG\nMQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRUwEwYDVQQLEwxTZXJ2ZXIg\nQ0EgMUIxDzANBgNVBAMTBkFtYXpvbjAeFw0yMDA5MDIwMDAwMDBaFw0yMTEwMDMx\nMjAwMDBaMB8xHTAbBgNVBAMTFGdzc2hhcHB5bGVhcm5pbmcuY29tMIIBIjANBgkq\nhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoUrSgP2Vp4rfCuUJbhE4KkwwyKJ1U46b\nmv98tVnUaiswW1Q09gxRTb8mXjwx2AAzlLjEvwS3LXz3exjQVYUtOQkghsw3K4v/\nQVj6J/9bilnG/Iw1Rr6z/RQPqiPhxLS0HcGV3NibeN3d+PYkcMDq5S//YWp+i8WN\nzw0dH0PwgE3svrOob4gdsn4s3eYi9mwaw5jUIVaicd9ZowZgHS6QV3MZgQ2vQppg\n6giKVj3PGeurA32jX5Z7idvUoETeIQ3/nfDR/nXhsUdRwQl01Cmw9+izuUVnq36D\ns9sErN/3rijLgFiWMj+C+64drBU/f5V/3aYEAZnkuYMswJavlGQ7NwIDAQABo4IC\nmjCCApYwHwYDVR0jBBgwFoAUWaRmBlKge5WSPKOUByeWdFv5PdAwHQYDVR0OBBYE\nFNn5k7kxbCXbN4b8z5aypPwJ9M+wMDkGA1UdEQQyMDCCFGdzc2hhcHB5bGVhcm5p\nbmcuY29tghh3d3cuZ3NzaGFwcHlsZWFybmluZy5jb20wDgYDVR0PAQH/BAQDAgWg\nMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjA7BgNVHR8ENDAyMDCgLqAs\nhipodHRwOi8vY3JsLnNjYTFiLmFtYXpvbnRydXN0LmNvbS9zY2ExYi5jcmwwIAYD\nVR0gBBkwFzALBglghkgBhv1sAQIwCAYGZ4EMAQIBMHUGCCsGAQUFBwEBBGkwZzAt\nBggrBgEFBQcwAYYhaHR0cDovL29jc3Auc2NhMWIuYW1hem9udHJ1c3QuY29tMDYG\nCCsGAQUFBzAChipodHRwOi8vY3J0LnNjYTFiLmFtYXpvbnRydXN0LmNvbS9zY2Ex\nYi5jcnQwDAYDVR0TAQH/BAIwADCCAQQGCisGAQQB1nkCBAIEgfUEgfIA8AB2APZc\nlC/RdzAiFFQYCDCUVo7jTRMZM7/fDC8gC8xO8WTjAAABdE7QfZwAAAQDAEcwRQIg\nMJ1+HuDZrC7mDhWWSTQK0RW+WicfSAfxDSvjeTaAWlMCIQC7EFom0UXC2ZUm26LQ\n+fJPhgHsQp7BRWkffDh0THciywB2AFzcQ5L+5qtFRLFemtRW5hA3+9X6R9yhc5Sy\nXub2xw7KAAABdE7QfhcAAAQDAEcwRQIhANM2FCXMBSGcp0me8esz9htUpuGA+SJ+\nJaZFnmzLNkdoAiAZzzXF9gJIytIKRaGSOuURn5HpDDLLqNnyjbWcin6whDANBgkq\nhkiG9w0BAQsFAAOCAQEAwi0bhEqiThjnDk/9J6OrGKCgSq0uxh1tM1lGNLUa/pDY\nd5T9n3vd96n5ra3vSmiyv9gcx0Gx6u2NJSWFqtyeXXahPu0j4D5B57Jj1eh7B0vx\nySmN5i4CyWxdH4BvvHR9YKdgFWs67mwPrsaW/GLZwaaZ3YQJ1gUI3i7fKvaQZFBT\nyU8t/DMiG//irORTlTByHOMxnyRdaktbuozdLwzkXpxe3yvYDJ9n962F3B/kpzo5\nNMKhc2BREkF7Z9KSCnGWHIDMyzb3+E9Xhx8LjI9R7TmX2OVzXLZn3VkPD9IxF6C5\ngNiNTNF/MiJuQ3HrtYZMqNPzRXAYVO0cMvrZALnEdA==\n-----END CERTIFICATE-----\n",
                            "canBeLeaf": true,
                            "canBeCA": false,
                            "selfSigned": false
                        }
                    ]
                }
            },
            {
                "name": "cpCode",
                "options": {
                    "value": {
                        "id": 862667,
                        "description": "marcotest.com",
                        "products": [
                            "Fresca"
                        ],
                        "createdDate": 1560441022000,
                        "cpCodeLimits": {
                            "limit": 3548,
                            "currentCapacity": 349,
                            "limitType": "account"
                        },
                        "name": "marcotest.com"
                    }
                }
            },
            {
                "name": "caching",
                "options": {
                    "behavior": "MAX_AGE",
                    "mustRevalidate": false,
                    "ttl": "0s"
                }
            },
            {
                "name": "sureRoute",
                "options": {
                    "enabled": true,
                    "srDownloadLinkTitle": "",
                    "type": "PERFORMANCE",
                    "testObjectUrl": "/index.html",
                    "toHostStatus": "INCOMING_HH",
                    "raceStatTtl": "10s",
                    "forceSslForward": false,
                    "enableCustomKey": false
                }
            },
            {
                "name": "tieredDistribution",
                "options": {
                    "enabled": true
                }
            },
            {
                "name": "mPulse",
                "options": {
                    "enabled": true,
                    "requirePci": true,
                    "titleOptional": "",
                    "apiKey": "",
                    "bufferSize": "",
                    "configOverride": "",
                    "loaderVersion": "V10"
                }
            },
            {
                "name": "persistentClientConnection",
                "options": {
                    "enabled": true,
                    "timeout": "500s"
                },
                "uuid": "df6730e3-fc17-42c4-b78b-4af79b3b079e"
            },
            {
                "name": "timeout",
                "options": {
                    "value": "5s"
                }
            },
            {
                "name": "setVariable",
                "options": {
                    "variableName": "PMUSER_PATH",
                    "valueSource": "EXPRESSION",
                    "transform": "NONE",
                    "variableValue": "{{builtin.AK_ORIGINAL_URL}}"
                }
            },
            {
                "name": "edgeRedirector",
                "options": {
                    "enabled": true,
                    "isSharedPolicy": false,
                    "cloudletPolicy": {
                        "id": 128099,
                        "name": "marco_edgeredir"
                    }
                }
            },
            {
                "name": "enhancedProxyDetection",
                "options": {
                    "enabled": true,
                    "forwardHeaderEnrichment": true,
                    "enableConfigurationMode": "ADVANCED",
                    "anonymousVpn": "",
                    "detectAnonymousVpn": true,
                    "publicProxy": "",
                    "detectPublicProxy": true,
                    "torExitNode": "",
                    "detectTorExitNode": true,
                    "smartDNSProxy": "",
                    "detectSmartDNSProxy": true,
                    "hostingProvider": "",
                    "detectHostingProvider": true,
                    "vpnDataCenter": "",
                    "detectVpnDataCenter": true,
                    "detectAnonymousVpnAction": "ALLOW",
                    "detectPublicProxyAction": "ALLOW",
                    "detectTorExitNodeAction": "ALLOW",
                    "detectSmartDNSProxyAction": "ALLOW",
                    "detectHostingProviderAction": "ALLOW",
                    "detectVpnDataCenterAction": "ALLOW"
                }
            },
            {
                "name": "http2",
                "options": {
                    "enabled": ""
                }
            },
            {
                "name": "adaptiveAcceleration",
                "options": {
                    "source": "mPulse",
                    "titleHttp2ServerPush": "",
                    "enablePush": true,
                    "titlePreconnect": "",
                    "enablePreconnect": true,
                    "titlePreload": "",
                    "preloadEnable": true,
                    "compression": "",
                    "titleRo": "",
                    "enableRo": true,
                    "titleBrotli": "",
                    "enableBrotliCompression": false
                }
            },
            {
                "name": "allowTransferEncoding",
                "options": {
                    "enabled": true
                }
            }
        ],
        "uuid": "default",
        "options": {
            "is_secure": true
        },
        "variables": [
            {
                "name": "PMUSER_WIDTH",
                "value": "",
                "description": "",
                "hidden": false,
                "sensitive": false
            },
            {
                "name": "PMUSER_HEIGHT",
                "value": "",
                "description": "",
                "hidden": false,
                "sensitive": false
            },
            {
                "name": "PMUSER_TEST",
                "value": "",
                "description": "",
                "hidden": false,
                "sensitive": false
            },
            {
                "name": "PMUSER_PATH",
                "value": "",
                "description": "",
                "hidden": false,
                "sensitive": false
            },
            {
                "name": "PMUSER_CACHE_ORIGIN",
                "value": "",
                "description": "",
                "hidden": false,
                "sensitive": false
            },
            {
                "name": "PMUSER_PROXY",
                "value": "",
                "description": "",
                "hidden": false,
                "sensitive": false
            },
            {
                "name": "PMUSER_VPN",
                "value": "",
                "description": "",
                "hidden": false,
                "sensitive": false
            }
        ],
        "advancedOverride": "<!-- Advanced rule to modify outgoing request header based on EPD match -->\n<match:request.type value=\"CLIENT_REQ\" result=\"true\">\n<match:variable name=\"IS_ANONYMOUS_VPN_OUT\" value=\"1\">\n             <edgeservices:modify-outgoing-request.remove-header>\n                 <name>X-Detected-VPN</name>\n                 <status>on</status>\n             </edgeservices:modify-outgoing-request.remove-header>\n            <edgeservices:modify-outgoing-request.add-header>\n                <name>X-Detected-VPN</name>\n                <value>true</value>\n                <status>on</status>\n            </edgeservices:modify-outgoing-request.add-header>\n</match:variable>\n\n<match:variable name=\"IS_HOSTING_PROVIDER_OUT\" value=\"1\">\n             <edgeservices:modify-outgoing-request.remove-header>\n                 <name>X-Detected-VPN</name>\n                 <status>on</status>\n             </edgeservices:modify-outgoing-request.remove-header>\n            <edgeservices:modify-outgoing-request.add-header>\n                <name>X-Detected-VPN</name>\n                <value>true</value>\n                <status>on</status>\n            </edgeservices:modify-outgoing-request.add-header>\n</match:variable>\n\n<match:variable name=\"IS_VPN_DC_OUT\" value=\"1\">\n\t\t\t <edgeservices:modify-outgoing-request.remove-header>\n                 <name>X-Detected-VPN</name>\n                 <status>on</status>\n             </edgeservices:modify-outgoing-request.remove-header>\n            <edgeservices:modify-outgoing-request.add-header>\n                <name>X-Detected-VPN</name>\n                <value>true</value>\n                <status>on</status>\n            </edgeservices:modify-outgoing-request.add-header>\n</match:variable>\n\n\n<match:variable name=\"IS_PUBLIC_PROXY_OUT\" value=\"1\">\n             <edgeservices:modify-outgoing-request.remove-header>\n                 <name>X-Detected-Proxy</name>\n                 <status>on</status>\n             </edgeservices:modify-outgoing-request.remove-header>\n            <edgeservices:modify-outgoing-request.add-header>\n                <name>X-Detected-Proxy</name>\n                <value>true</value>\n                <status>on</status>\n            </edgeservices:modify-outgoing-request.add-header>\n</match:variable>\n\n\n<match:variable name=\"IS_SMART_DNS_OUT\" value=\"1\">\n             <edgeservices:modify-outgoing-request.remove-header>\n                 <name>X-Detected-Proxy</name>\n                 <status>on</status>\n             </edgeservices:modify-outgoing-request.remove-header>\n            <edgeservices:modify-outgoing-request.add-header>\n                <name>X-Detected-Proxy</name>\n                <value>true</value>\n                <status>on</status>\n            </edgeservices:modify-outgoing-request.add-header>\n</match:variable>\n</match:request.type>",
        "comments": "The behaviors in the Default Rule apply to all requests for the property hostname(s) unless another rule overrides the Default Rule settings."
    }
}